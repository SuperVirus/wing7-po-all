# Module src translation file for language=en
# Copyright (C) 2003 Archaeopteryx Software, Inc.
# Wing Python IDE -- wingware.com
#
msgid ""
msgstr ""
"Project-Id-Version: 2.0.0\n"
"POT-Creation-Date: 2018-08-23 14:17+EDT\n"
"PO-Revision-Date: 2003-07-10 12:22GMT\n"
"Last-Translator: \n"
"Language-Team:  <C@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.4\n"
"X-Generator: KBabel 0.9.5\n"

#: src/capabilities.py:98
msgid "Advanced indentation analysis and translation"
msgstr ""

#: src/capabilities.py:99
msgid "Folding in the source code editor"
msgstr ""

#: src/capabilities.py:100
msgid "Recent menus"
msgstr ""

#: src/capabilities.py:101
msgid "Attach/detach to debug processes"
msgstr ""

#: src/capabilities.py:102
msgid "Expression and value watching for debugger"
msgstr ""

#: src/capabilities.py:103
msgid "Interactive debug probe tool"
msgstr ""

#: src/capabilities.py:104
msgid "Debug externally launched processes"
msgstr ""

#: src/capabilities.py:105
msgid "Advance exception handling modes"
msgstr ""

#: src/capabilities.py:106
msgid "Module-oriented debug data view"
msgstr ""

#: src/capabilities.py:107
msgid "Shared projects for use in revision control"
msgstr ""

#: src/capabilities.py:108
msgid "Advanced breakpoints for debugger"
msgstr ""

#: src/capabilities.py:109
msgid "Debug data value tooltips"
msgstr ""

#: src/capabilities.py:110
msgid "Debugger breakpoint manager"
msgstr ""

#: src/capabilities.py:111
msgid "Source code browser"
msgstr ""

#: src/capabilities.py:112
msgid "Source assistant"
msgstr ""

#: src/capabilities.py:113
msgid "Scripting support"
msgstr ""

#: src/capabilities.py:114
msgid "Keyboard and command macro support"
msgstr ""

#: src/capabilities.py:115
msgid "User-defined named bookmarks"
msgstr ""

#: src/capabilities.py:116
msgid "Autocompletion"
msgstr ""

#: src/capabilities.py:117
msgid "Projects"
msgstr ""

#: src/capabilities.py:118
msgid "Wildcard and regular expression search"
msgstr ""

#: src/capabilities.py:119
msgid "Batch search"
msgstr ""

#: src/capabilities.py:120
msgid "Disk search"
msgstr ""

#: src/capabilities.py:121
msgid "Multi-window GUI support"
msgstr ""

#: src/capabilities.py:122
msgid "Messages view"
msgstr ""

#: src/capabilities.py:123
msgid "Unit testing tool"
msgstr ""

#: src/capabilities.py:124
msgid "Support for running external processes in a console"
msgstr ""

#: src/capabilities.py:125
msgid "Code snippets"
msgstr ""

#: src/capabilities.py:126
msgid "Version control"
msgstr ""

#: src/capabilities.py:127
msgid "Perspectives"
msgstr ""

#: src/capabilities.py:128
msgid "Difference and merge tool"
msgstr ""

#: src/capabilities.py:129
msgid "Code warnings"
msgstr ""

#: src/capabilities.py:130
msgid "Auto-editing"
msgstr ""

#: src/capabilities.py:131
msgid "Named file sets"
msgstr ""

#: src/capabilities.py:132
msgid "Launch Configurations"
msgstr ""

#: src/capabilities.py:133
msgid "IPython"
msgstr ""

#: src/capabilities.py:134
msgid "Multi-process debugging"
msgstr ""

#: src/capabilities.py:135
msgid "Find Symbol in Project"
msgstr ""

#: src/capabilities.py:137
msgid "Debug code executed in shells"
msgstr ""

#: src/capabilities.py:138
msgid "Automated remote debugging"
msgstr ""

#: src/capabilities.py:140
msgid "Generic support specific to Wing 101"
msgstr ""

#: src/capabilities.py:141
msgid "Generic support specific to Wing Personal"
msgstr ""

#: src/capabilities.py:142
msgid "Generic support specific to Wing Pro"
msgstr ""

#: src/config.py:148
msgid ""
"Wing was written at Wingware, maker of Python IDEs since 1998.  This product "
"contains the following third party modules:\n"
"    \n"
"  * Python, the programming language, written by Guido van Rossum and many "
"contributors.\n"
"\n"
"  * Qt5 cross-platform GUI toolkit, developed by many contributors.\n"
"  \n"
"  * PyQt5 Python bindings for Qt5, by Riverbank Computing Limited.\n"
"  \n"
"  * Python Imaging Library, developed by Secret Labs AB and Fredrik Lundh.\n"
"  \n"
"  * Scintilla, a source code editor widget, written by Neil Hodgson and many "
"contributors.\n"
"  \n"
"  * Docutils, tools for ReST document conversion, written by David Goodger "
"and contributors.\n"
"  \n"
"  * Sqlite, an embedded sql database engine, written by D. Richard Hipp, Dan "
"Kennedy, Shane Harrelson, Christian Werner, and contributors.\n"
"  \n"
"  * Pysqlite, Python bindings for sqlite, written by Gerhard HÃ¤ring.\n"
"  \n"
"  * pexpect by Noah Spurrier, Richard Holden, Marco Molteni, Kimberley "
"Burchett, Robert Stone, Hartmut Goebel, Chad Schroeder, Erick Tryzelaar, "
"Dave Kirby, Ids vander Molen, George Todd, Noel Taylor, Nicolas D. Cesar, "
"Alexander Gattin, Geoffrey Marshall, Francisco Lourenco, Glen Mabey, Karthik "
"Gurusamy, and Fernando Perez.\n"
"  \n"
"  * pycodestyle by Johann C. Rocholl, Florent Xicluna, and Ian Lee.\n"
"  \n"
"  * autopep8 by Hideo Hattori, Steven Myint, Bill Wendling, and "
"contributors.\n"
"  \n"
"  * Icons from Crystal Clear by Everaldo and Tulliana-1.0 by M. Umut Pulat.\n"
"  \n"
"We gratefully acknowledge the efforts of all that have contributed to these "
"and the other open source products and tools that are used in the "
"development of Wing.\n"
"  \n"
"  "
msgstr ""

#: src/main.py:67
msgid "Wing %s version is %s build %s"
msgstr ""

#: src/main.py:68
msgid "kWingHome="
msgstr ""

#: src/main.py:69
msgid "UserSettings="
msgstr ""

#: src/main.py:70
msgid "kCachDir="
msgstr ""

#: src/main.py:74
msgid "Cannot run without WINGHOME: exiting"
msgstr ""

#: src/main.py:84
msgid "Exit"
msgstr ""

#: src/main.py:90
msgid "Could not create or access user settings directory "
msgstr ""

#: src/main.py:118
msgid "Creating singletons..."
msgstr ""

#: src/main.py:284
msgid "_Use dotfile locking"
msgstr ""

#: src/main.py:285
msgid "_Don't use dotfile locking"
msgstr ""

#: src/main.py:286
msgid "Wing may not have started correctly"
msgstr ""

#: src/main.py:287
msgid ""
"Wing may have hung when trying to open a database file in your ~/.cache "
"directory the last time it was run.  This may be caused by a file locking "
"failure with a remote file server.  To work around the file locking failure, "
"use the slower dotfile locking."
msgstr ""

#: src/mainprefs.py:34
msgid "System Default"
msgstr ""

#: src/mainprefs.py:45
msgid ""
"The language to use for the user interface.  Either the default for this "
"system, or set to a specific supported language."
msgstr ""

#: src/mainprefs.py:54
msgid ""
"Controls whether most recent project is reopened at startup, in the absence "
"of any other project on the command line."
msgstr ""

#: src/mainprefs.py:67
msgid ""
"This is a map from file extension or wildcard to mime type.  It adds "
"additional file type mappings to those built into Wing.  File extensions can "
"be specified alone without dot or wildcard, for example \"xcf\" or using "
"wildcards containing \"*\" and/or \"?\", for example \"Makefile*\". The mime "
"type to use for Python files is \"text/x-python\"."
msgstr ""

#: src/mainprefs.py:73
msgid "File Extension"
msgstr ""

#: src/mainprefs.py:73 src/mainprefs.py:82 src/mainprefs.py:91
msgid "Mime Type"
msgstr ""

#: src/mainprefs.py:79
msgid ""
"This is a map from mime type to displayable name for that mime type; one "
"entry should be added for each new mime type added with the main.extra-mime-"
"types preference."
msgstr ""

#: src/mainprefs.py:82 src/mainprefs.py:458
msgid "Name"
msgstr ""

#: src/mainprefs.py:88
msgid ""
"This is a map from mime type to tuple of start/end comment characters for "
"each mime type.  One entry should be added for each new mime type added with "
"the main.extra-mime-types preference."
msgstr ""

#: src/mainprefs.py:91
msgid "Comment Characters"
msgstr ""

#: src/mainprefs.py:92
msgid "End"
msgstr ""

#: src/mainprefs.py:92
msgid "Start"
msgstr ""

#: src/mainprefs.py:97
msgid "System default (%s)"
msgstr ""

#: src/mainprefs.py:99
msgid ""
"The default encoding to use for text files opened in the source editor and "
"other tools, when an encoding for that file cannot be determined by reading "
"the file.  Other encodings may also be tried.  This also sets the encoding "
"to use for newly created files."
msgstr ""

#: src/mainprefs.py:110
msgid ""
"The number of bytes at which the IDE log file (%s) is truncated.  This file "
"can be sent to technical support to help diagnose problems with the IDE."
msgstr ""

#: src/mainprefs.py:118
msgid "Auto Reload"
msgstr ""

#: src/mainprefs.py:119 src/mainprefs.py:126
msgid "Immediately Request Reload"
msgstr ""

#: src/mainprefs.py:120 src/mainprefs.py:127
msgid "Request Reload on Edit"
msgstr ""

#: src/mainprefs.py:121 src/mainprefs.py:128
msgid "Never Reload"
msgstr ""

#: src/mainprefs.py:139
msgid ""
"Selects action to perform on files found to be externally changed but "
"unaltered within the IDE.  Use Auto Reload to automatically reload these "
"files, Immediately Request Reload to ask via a dialog box upon detection, "
"Request Reload on Edit to ask only if the unchanged file is edited within "
"the IDE subsequently, or Never Reload to ignore external changes (although "
"you will still be warned if you try to save over an externally changed file)"
msgstr ""

#: src/mainprefs.py:148
msgid ""
"Selects action to perform on files found to be externally changed and that "
"also have been altered in the IDE.  One of Immediately Request Reload to ask "
"via a dialog box upon detection, Request Reload on Edit to ask if the file "
"is edited further, or Never Reload to ignore external changes (although you "
"will always be warned if you try to save over an externally changed file)"
msgstr ""

#: src/mainprefs.py:156
msgid ""
"Time in seconds indicating the frequency with which the IDE should check the "
"disk for files that have changed externally. Set to 0 to disable entirely."
msgstr ""

#: src/mainprefs.py:162
msgid ""
"Don't reload files if size has not changed and a hash of the contents "
"matches the hash when it was last read. This check is skipped if file is "
"larger than 5 MB."
msgstr ""

#: src/mainprefs.py:170
msgid ""
"Specifies the directories in which Wing will look for user-defined scripts "
"that extend the functionality of the IDE itself.  The directory names may "
"contain environment variables in the $(envname) form.  Use $(WING:"
"PROJECT_DIR) for the project directory.For each directory, Wing will load "
"all found Python modules and packages, treating any function whose name "
"starts with a letter (not _ or __) as a script-provided command.  Extension "
"scripts found in files within directories later in the list will override "
"scripts of the same name found earlier, except that scripts can never "
"override commands that are defined internally in Wing itself (these are "
"documented in the Command Reference in the users manual). See the Scripting "
"and Extending chapter of the manual for more information on writing and "
"using extension scripts.  Note that %s is always appended to the given path "
"since it contains scripts that ship with Wing."
msgstr ""

#: src/mainprefs.py:188
msgid ""
"When enabled, Wing will automatically reload scripts that extend the IDE "
"when they are edited and saved from the IDE.  This makes developing "
"extension scripts for the IDE very fast, and should work in most cases.  "
"Disable this when working on extension scripts that do not reload properly, "
"such as those that reach through the scripting API extensively."
msgstr ""

#: src/mainprefs.py:201
msgid ""
"Automatically check for updates at startup by connecting to wingware.com. "
"Updates are checked every three days, or more often for prerelease versions."
msgstr ""

#: src/mainprefs.py:211
msgid ""
"Show a reminder when Support+Upgrades for the active license is expired or "
"will expire soon."
msgstr ""

#: src/mainprefs.py:216
msgid ""
"Used internally to keep track of latest version the user is not interested in"
msgstr ""

#: src/mainprefs.py:225
msgid ""
"Allow submitting a log of which features you use to Wingware.  This is done "
"periodically at startup and also when you submit bug reports, feedback, or "
"check for updates.  The data provided is held confidential, used only for "
"technical support and planning future development, and can be seen in the "
"file %s"
msgstr ""

#: src/mainprefs.py:232
msgid "Base on the Current File or Selection"
msgstr ""

#: src/mainprefs.py:233
msgid "Use Project's Home Directory"
msgstr ""

#: src/mainprefs.py:234
msgid "Use Last Open/Save Directory"
msgstr ""

#: src/mainprefs.py:235
msgid "Use Startup or Current Directory"
msgstr ""

#: src/mainprefs.py:236
msgid "Use Fixed Directory Specified Below"
msgstr ""

#: src/mainprefs.py:241
msgid ""
"Defines how Wing determines the starting directory to use when prompting for "
"a file name:  Either based on location of the resource at current focus, "
"location of the current project home directory, the last directory visited "
"for file selection, the current directory at startup (or selected since), or "
"always the specific fixed directory entered here."
msgstr ""

#: src/mainprefs.py:282
msgid "Python Files"
msgstr ""

#: src/mainprefs.py:283
msgid "Hidden & Temporary Files"
msgstr ""

#: src/mainprefs.py:284
msgid "All Source Files"
msgstr ""

#: src/mainprefs.py:285
msgid "C/C++ Files"
msgstr ""

#: src/mainprefs.py:286
msgid "HTML and XML Files"
msgstr ""

#: src/mainprefs.py:408 src/mainprefs.py:409
msgid "Spec"
msgstr ""

#: src/mainprefs.py:408 src/mainprefs.py:409
msgid "Type"
msgstr ""

#: src/mainprefs.py:414
msgid "Exclude"
msgstr ""

#: src/mainprefs.py:414
msgid "Include"
msgstr ""

#: src/mainprefs.py:420
msgid ""
"Defines file filters to apply to file names for inclusion and exclusion from "
"a larger set (such as scanned disk files or all project files).\n"
"\n"
"Each filter is named and contains one list of inclusion patterns and one "
"list of exclusion patterns.  The patterns can be a wildcard on the file "
"name, wildcard on a directory name, or a mime type name.\n"
"\n"
" Only a single pattern needs to be matched for inclusion or exclusion.  "
"Exclusion patterns take precedence over inclusion patterns, so any match on "
"an exclusion pattern will always exclude a file from the selected set.  "
"Filters are used in constraining search, adding project files, and for other "
"operations on collections of files."
msgstr ""

#: src/mainprefs.py:458
msgid "Specification"
msgstr ""

#: src/mainprefs.py:464
msgid ""
"If True and a gtk, gdk, or glib critical message is logged, Wing tries to "
"start a C debugger and break at the current execution point"
msgstr ""

#: src/mainprefs.py:472
msgid "Controls whether or not the splash screen is shown at startup."
msgstr ""

#: src/mainprefs.py:478
msgid "Reuse Existing Instance to Open Files"
msgstr ""

#: src/mainprefs.py:479
msgid "Always Reuse Existing Instance"
msgstr ""

#: src/mainprefs.py:480
msgid "Always Launch New Instance"
msgstr ""

#: src/mainprefs.py:485
msgid ""
"Controls whether Wing tries to reuse an existing running instance of the IDE "
"when it is launched again."
msgstr ""

#: src/mainprefs.py:495
msgid ""
"When enabled, Wing will show a dialog offerring to update any remote agent "
"that does not match Wing's version."
msgstr ""

#: src/mainprefs.py:509
msgid ""
"The executable to use in order to run the SSH client on the host where Wing "
"is running.  This is used to establish secure SSH tunnels to remote hosts. "
"You must configure SSH and a key server outside of Wing, since Wing assumes "
"it can connect to remote hosts without entering a password."
msgstr ""

#: src/mainprefs.py:514
msgid "Find %s on PATH"
msgstr ""

#: src/mainprefs.py:515
msgid "Use executable:"
msgstr ""

#: src/mainprefs.py:521
msgid ""
"The TCP/IP port number to use for the remote end of the SSH tunnel to Wing's "
"remote agent.  Using a random port should work in most cases and avoids "
"collisions if there are multiple active sessions, but a fixed port is needed "
"if the random port generated IDE-side is not also available on the remote "
"host."
msgstr ""

#: src/mainprefs.py:527
msgid "Use Random Port"
msgstr ""

#: src/mainprefs.py:528
msgid "Use specified port:"
msgstr ""

#: src/mainprefs.py:533
msgid "The maximum time in seconds to wait for SSH tunnels to be established."
msgstr ""

#: src/mainprefs.py:541
msgid ""
"The maximum time in seconds to wait if a connection to a remote host is not "
"responding.  Afterwards the connection is closed and retried."
msgstr ""

#: src/mainprefs.py:550
msgid ""
"Allows manual configuration of an http proxy to be used for feedback, bug "
"reports, and license activation, all of which result in Wing connecting to "
"wingware.com via http.  Leave user name and password blank if not required."
msgstr ""

#: src/mainprefs.py:554
msgid "No proxy server (or auto-detected)"
msgstr ""

#: src/mainprefs.py:555
msgid "Configure proxy server manually:"
msgstr ""

#: src/mainprefs.py:556
msgid "Host name"
msgstr ""

#: src/mainprefs.py:556
msgid "Port"
msgstr ""

#: src/mainprefs.py:556
msgid "User name"
msgstr ""

#: src/mainprefs.py:557
msgid "Password"
msgstr ""

#: src/mainprefs.py:563
msgid ""
"Whether to use secure https (port 443) when accessing wingware.com for "
"license activation, update checks, and submitting feedback or bug reports.  "
"When disabled, http (port 80) is used instead."
msgstr ""

#: src/mainprefs.py:570 src/mainprefs.py:605
msgid "Never"
msgstr ""

#: src/mainprefs.py:571
msgid "When saving files"
msgstr ""

#: src/mainprefs.py:572
msgid "When saving files in project"
msgstr ""

#: src/mainprefs.py:576
msgid ""
"Controls whether to automatically strip trailing white space in the editor.  "
"May be enabled for any file or only files that are part of the current "
"project."
msgstr ""

#: src/mainprefs.py:587
msgid "Tools and Layout"
msgstr ""

#: src/mainprefs.py:588
msgid "Tools, Layout, and Editors"
msgstr ""

#: src/mainprefs.py:589
msgid "All Visual State"
msgstr ""

#: src/mainprefs.py:593
msgid ""
"Selects the file to use for storing and retrieving shared perspectives. By "
"default (when value is None) the file 'perspectives' in the user settings "
"directory is used."
msgstr ""

#: src/mainprefs.py:598 src/mainprefs.py:624
msgid "Default"
msgstr ""

#: src/mainprefs.py:599 src/mainprefs.py:625
msgid "File:"
msgstr ""

#: src/mainprefs.py:604
msgid "Always"
msgstr ""

#: src/mainprefs.py:606
msgid "Prompt"
msgstr ""

#: src/mainprefs.py:607
msgid "Configured by Perspective"
msgstr ""

#: src/mainprefs.py:610
msgid ""
"Selects whether to auto-save perspectives when switching to another "
"perspective. Can always auto-save, never auto-save, prompt each time a "
"perspective is left, or auto-save as configured on a per-perspective basis."
msgstr ""

#: src/mainprefs.py:619
msgid ""
"Selects the file to use for storing and retrieving shared named files sets. "
"By default (when value is None) the file 'filesets' in the user settings "
"directory is used."
msgstr ""

#: src/mainprefs.py:630
msgid "Defines which plugins are enabled or disabled."
msgstr ""

#: src/mainprefs.py:637
msgid ""
"The amount by which to zoom font sizes in or out in the documentation viewer."
msgstr ""

#: src/mainprefs.py:642
msgid ""
"Whether to try parsing docstrings as ReST format for display in the Source "
"Assistant.  This may destroy formatting of some docstrings."
msgstr ""

#: src/mainprefs.py:649
msgid "Debug"
msgstr ""

#: src/mainprefs.py:650
msgid "Informational"
msgstr ""

#: src/mainprefs.py:651
msgid "Warning"
msgstr ""

#: src/mainprefs.py:652
msgid "Error"
msgstr ""

#: src/mainprefs.py:653
msgid "Severe"
msgstr ""

#: src/mainprefs.py:656
msgid ""
"The error level at or above which the source assistant will display parse "
"errors in PEP287 docstrings (if showing PEP287 errors) or will fall back to "
"showing plain text (if not showing PEP287 errors).  For errors below this "
"threshold, a best attempt is made to achieve a reasonable rendering."
msgstr ""

#: src/mainprefs.py:664
msgid ""
"Whether to render docstrings even if they contain parse errors at or above "
"the threshold set by Source Assistant PEP 287 Error Threshold.  When "
"disabled, failing docstrings are shown as plain text instead.  When enabled, "
"a best effort is made to display the formatted docstring while suppressing "
"errors."
msgstr ""

#: src/mainprefs.py:672
msgid ""
"Whether to rewrap plain text docstrings for display in the Source "
"Assistant.  This may destroy formatting of some docstrings."
msgstr ""

#: src/mainprefs.py:678
msgid ""
"Whether to always show docstrings in the Source Assistant.  When disabled, "
"only the docstring for the last displayed symbol is shown."
msgstr ""

#: src/mainprefs.py:684
msgid "Whether show docstring type and validity in the Source Assistant."
msgstr ""

#: src/mainprefs.py:690
msgid "Controls whether Wing will periodically show discount offers."
msgstr ""

#: src/mainprefs.py:696
msgid "History of updates used diagnostically"
msgstr ""

#: src/premain.py:45
msgid "Warning: A filename must follow the --prefs-file option"
msgstr ""

#: src/premain.py:49
msgid "Warning: A prefs filename cannot begin with \"--\""
msgstr ""

#: src/premain.py:277
msgid "alpha"
msgstr ""

#: src/premain.py:279
msgid "beta"
msgstr ""

#: src/premain.py:281
msgid "release candidate"
msgstr ""

#: src/premain.py:286
msgid "Version %s.%s%s: "
msgstr ""

#: src/premain.py:597
msgid "Top-level Commands"
msgstr ""

#: src/premain.py:599
msgid "Project Manager Commands"
msgstr ""

#: src/premain.py:601
msgid "Editor Commands"
msgstr ""

#: src/premain.py:603
msgid "Search Manager Commands"
msgstr ""

#: src/premain.py:605
msgid "Unit Testing Commands"
msgstr ""

#: src/premain.py:608
msgid "Version Control Commands"
msgstr ""

#: src/premain.py:611
msgid "Debugger Commands"
msgstr ""

#: src/premain.py:613
msgid "Refactoring Commands"
msgstr ""

#: src/premain.py:616
msgid "Source Browser Commands"
msgstr ""

#: src/premain.py:619
msgid "Script-provided Add-on Commands"
msgstr ""

#: src/premain.py:651 src/premain.py:751
msgid "OS X"
msgstr ""

#: src/premain.py:754
msgid "XCode"
msgstr ""

#: src/premain.py:856
msgid "Preferences Dialog Path"
msgstr ""

#: src/premain.py:858
msgid "Internal Name"
msgstr ""

#: src/premain.py:859
msgid "Data Specification"
msgstr ""

#: src/premain.py:863
msgid "Default Value"
msgstr ""

#: src/premain.py:889
msgid "Core Preferences"
msgstr ""

#: src/premain.py:890
msgid "User Interface Preferences"
msgstr ""

#: src/premain.py:891
msgid "Editor Preferences"
msgstr ""

#: src/premain.py:895
msgid "Diff/Merge Preferences"
msgstr ""

#: src/premain.py:898
msgid "Project Manager Preferences"
msgstr ""

#: src/premain.py:899
msgid "Debugger Preferences"
msgstr ""

#: src/premain.py:900
msgid "Source Analysis Preferences"
msgstr ""

#: src/premain.py:904
msgid "Source Browser Preferences"
msgstr ""

#: src/premain.py:906
msgid "Version Control Preferences"
msgstr ""

#: src/premain.py:908
msgid "Internal Preferences"
msgstr ""

#: src/singleton.py:274
msgid "Creating singletons... %s"
msgstr ""

#: src/singleton.py:719
msgid "Enter Command Arguments"
msgstr ""

#: src/singleton.py:1055
msgid "Wing"
msgstr ""

#: src/startwing.py:503
msgid "Use console_%s to print a diagnostic log while running."
msgstr ""

#: src/startwing.py:506
msgid "--verbose                  Print a diagnostic log while running"
msgstr ""

#: src/startwing.py:509
msgid ""
"Wing %(product)s Command Line Usage:\n"
"\n"
"%(execname)s <args> [<project>.wpr] [file1[:lineno], ...]\n"
"\n"
"Optionally specify a project to open and/or a list of files.  Filenames\n"
"may be followed by ':' and a line number to scroll to that line.\n"
"\n"
"Valid arguments are:\n"
"  \n"
"--prefs-file=<filename>    Set preferences override file.  Any preferences\n"
"                           in the file override those in the default user\n"
"                           preferences file and any changes made during the\n"
"                           session are written to the override file.\n"
"                             \n"
"--new                      Force creation of a new instance of Wing even if\n"
"                           an instance is already running.\n"
"--reuse                    Force reusing any existing instance of Wing even\n"
"                           if no files were given on the command line.\n"
"  \n"
"%(verbose)s\n"
"--check-install            Run an integrity check on the Wing installation "
"and\n"
"                           all installed updates\n"
"--disable-updates          Disable loading updates and run the original "
"installed\n"
"                           version of Wing\n"
"--help                     Show this message.\n"
"  \n"
"For details see https://wingware.com/doc/install/command-line-usage  \n"
msgstr ""

#: src/startwing.py:878
msgid "Fatal startup error:  Exiting Wing"
msgstr ""
