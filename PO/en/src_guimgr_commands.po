# Module src_guimgr_commands translation file for language=en
# Copyright (C) 2004 Archaeopteryx Software, Inc.
# Wing Python IDE -- wingware.com
#
msgid ""
msgstr ""
"Project-Id-Version: 2.0.0\n"
"POT-Creation-Date: 2018-08-23 14:17+EDT\n"
"PO-Revision-Date: 2004-02-23 15:25 EST\n"
"Last-Translator: Claudia Walenzyk <support@wingide.com>\n"
"Language-Team: None\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=iso-8859-1\n"
"Content-Transfer-Encoding: text/plain\n"
"Generated-By: pygettext.py 1.5\n"

#: src/guimgr/commands.py:47
msgid ""
"Commands for the documentation viewer that are available regardless\n"
"  of where the focus is."
msgstr ""

#: src/guimgr/commands.py:60
msgid "Search all documentation. "
msgstr ""

#: src/guimgr/commands.py:75
msgid ""
"Commands for the documentation viewer.  These are available when\n"
"  the documentation viewer has the keyboard focus."
msgstr ""

#: src/guimgr/commands.py:93
msgid "Go back to prior page in the history of those that have been viewed"
msgstr ""

#: src/guimgr/commands.py:100
msgid "Go forward to next page in the history of those that have been viewed"
msgstr ""

#: src/guimgr/commands.py:107
msgid "Go to the previous page in the current document"
msgstr ""

#: src/guimgr/commands.py:114
msgid "Go to the next page in the current document"
msgstr ""

#: src/guimgr/commands.py:121
msgid "Go to the document contents page"
msgstr ""

#: src/guimgr/commands.py:128
msgid ""
" Initiate incremental mini-search forward from the cursor position,\n"
"    optionally entering the given search string."
msgstr ""

#: src/guimgr/commands.py:138
msgid ""
" Initiate incremental regular expression mini-search forward from the\n"
"    cursor position, optionally entering the given search string."
msgstr ""

#: src/guimgr/commands.py:147
msgid ""
" Initiate incremental mini-search backward from the cursor position,\n"
"    optionally entering the given search string."
msgstr ""

#: src/guimgr/commands.py:156
msgid ""
" Initiate incremental regular expression mini-search backward from the\n"
"    cursor position, optionally entering the given search string."
msgstr ""

#: src/guimgr/commands.py:165
msgid ""
"Repeat the most recent isearch, using same string and regex/text.\n"
"    Reverse direction when reverse is True."
msgstr ""

#: src/guimgr/commands.py:181
msgid ""
" Initiate incremental mini-search forward from the cursor position,\n"
"    using current selection as the search string.  Set persist=False to \n"
"    do the search but end the interactive search session immediately."
msgstr ""

#: src/guimgr/commands.py:191
msgid ""
" Initiate incremental mini-search backward from the cursor position,\n"
"    using current selection as the search string.  Set persist=False to\n"
"    do the search but end the interactive search session immediately."
msgstr ""

#: src/guimgr/commands.py:212
msgid " Copy any selected text. "
msgstr ""

#: src/guimgr/commands.py:234
msgid "Increase documentation font size"
msgstr ""

#: src/guimgr/commands.py:239
msgid "Decrease documentation font size"
msgstr ""

#: src/guimgr/commands.py:244
msgid "Reset documentation font size to default"
msgstr ""

#: src/guimgr/commands.py:253
msgid ""
"Commands for the Wing Tips tool.  These are only available when the\n"
"  tool is visible and has focus"
msgstr ""

#: src/guimgr/commands.py:266
msgid "Go to the previous page in Wing Tips"
msgstr ""

#: src/guimgr/commands.py:273
msgid "Go to the next page in Wing Tips"
msgstr ""

#: src/guimgr/commands.py:280
msgid "Go to the Wing Tips contents page"
msgstr ""

#: src/guimgr/commands.py:285
msgid "Go to a next unseen Wing Tips page"
msgstr ""

#: src/guimgr/commands.py:290
msgid "Close the Wing Tips window"
msgstr ""

#: src/guimgr/commands.py:299
msgid ""
"Commands for a particular editor split, available when the editor\n"
"  in that split has the keyboard focus.  Additional commands affecting\n"
"  the editor's content are defined separately."
msgstr ""

#: src/guimgr/commands.py:307 src/guimgr/commands.py:357
#: src/guimgr/commands.py:450 src/guimgr/commands.py:515
#: src/guimgr/commands.py:674 src/guimgr/commands.py:790
#: src/guimgr/commands.py:861
msgid " Constructor"
msgstr ""

#: src/guimgr/commands.py:313
msgid " Activate the file menu for the editor. "
msgstr ""

#: src/guimgr/commands.py:320
msgid "Move back in history to previous visited editor position"
msgstr ""

#: src/guimgr/commands.py:327
msgid "Move forward in history to next visited editor position"
msgstr ""

#: src/guimgr/commands.py:334
msgid "Increase height of this split"
msgstr ""

#: src/guimgr/commands.py:338
msgid "Decrease height of this split"
msgstr ""

#: src/guimgr/commands.py:342
msgid "Increase width of this split"
msgstr ""

#: src/guimgr/commands.py:346
msgid "Decrease width of this split"
msgstr ""

#: src/guimgr/commands.py:350
msgid ""
"Commands that control splitting up an editor panel.  These are available\n"
"  when one split in the editor panel has the keyboard focus."
msgstr ""

#: src/guimgr/commands.py:363
msgid " Split current view horizontally. "
msgstr ""

#: src/guimgr/commands.py:371
msgid " Split current view horizontally and open selected file"
msgstr ""

#: src/guimgr/commands.py:384
msgid "The file to select"
msgstr ""

#: src/guimgr/commands.py:389
msgid "Select file:"
msgstr ""

#: src/guimgr/commands.py:394
msgid ""
" Split current view vertically.  Create new editor in new view when new==1."
msgstr ""

#: src/guimgr/commands.py:402
msgid " Split current view vertically and open selected file"
msgstr ""

#: src/guimgr/commands.py:412
msgid ""
" Unsplit all editors so there's only one.  Action specifies how to\n"
"    choose the remaining displayed editor.  One of::\n"
"\n"
"      current -- Show current editor\n"
"      close   -- Close current editor before unsplitting\n"
"      recent  -- Change to recent buffer before unsplitting\n"
"      recent-or-close -- Change to recent buffer before closing\n"
"      split, or close the current buffer if there is only\n"
"      one split left.\n"
"    \n"
"    "
msgstr ""

#: src/guimgr/commands.py:444
msgid "Commands available only when the editor is in non-modal editing mode"
msgstr ""

#: src/guimgr/commands.py:456 src/guimgr/commands.py:541
msgid "Turn on auto-select mode character by character"
msgstr ""

#: src/guimgr/commands.py:466 src/guimgr/commands.py:546
msgid "Turn on auto-select mode line by line"
msgstr ""

#: src/guimgr/commands.py:476 src/guimgr/commands.py:551
msgid "Turn on auto-select block mode"
msgstr ""

#: src/guimgr/commands.py:486 src/guimgr/commands.py:695
msgid "Exit visual mode and return back to default mode"
msgstr ""

#: src/guimgr/commands.py:508
msgid ""
"Commands available only when the editor is in browse mode (used\n"
"  for VI bindings and possibly others)"
msgstr ""

#: src/guimgr/commands.py:525 src/guimgr/commands.py:700
msgid "Enter editor insert mode"
msgstr ""

#: src/guimgr/commands.py:530
msgid "Enter editor replace mode"
msgstr ""

#: src/guimgr/commands.py:535
msgid ""
"Enter editor visual mode.  Unit should be one of 'char', 'line',\n"
"    or 'block'."
msgstr ""

#: src/guimgr/commands.py:556
msgid "Turn on auto-select using previous mode and selection"
msgstr ""

#: src/guimgr/commands.py:562 src/guimgr/commands.py:706
msgid ""
"Execute a VI command by name.  This implements \":\" commands for the\n"
"    VI/Vim keyboard personality.  The following subset of VI/Vim : commands\n"
"    are supported::\n"
"    \n"
"      r[!], e[dit], e!, e#, ene[w], w[rite], up[date], wa[ll], q[uit], q[!], "
"qall, wq,\n"
"      x[it], xall, wqall, sp[lit], vs[plit], new, on[ly], buffers, files, !, "
"s[ubstitute],\n"
"      d, delm, reg, marks, n[ext], N, p[revious], rew[ind], last, m[ove], "
"co[py], cl[ose]\n"
"      (an approximation), and set.\n"
"      \n"
"    The supported directives for 'set' are:: \n"
"\n"
"      ic, ignorecase, noic, noignorecase, ai, autoindent, noai, "
"noautoindent, nu, number,\n"
"      nonu, nonumber, ro, readonly, noro, noreadonly, sm, showmatch, nosm, "
"and noshowmatch.\n"
"        \n"
"    "
msgstr ""

#: src/guimgr/commands.py:595 src/guimgr/commands.py:739
#: src/guimgr/commands.py:817
msgid ""
"Perform vi mode ctrl-v action which either does a paste or does\n"
"    start-select-block.  The default is to map ctrl-v to clipboard on\n"
"    Windows and OS X.  This can be overridden by the VI Mode Ctrl-X/C/V\n"
"    preference."
msgstr ""

#: src/guimgr/commands.py:608 src/guimgr/commands.py:752
msgid ""
"Perform vi mode ctrl-x action which either does a cut or does\n"
"    initiate-numeric-modified with the following digit key press. The "
"default\n"
"    is to map ctrl-x to clipboard on Windows and OS X. This can be "
"overridden\n"
"    by the VI Mode Ctrl-X/C/V preference."
msgstr ""

#: src/guimgr/commands.py:627 src/guimgr/commands.py:771
msgid ""
"Perform vi mode ctrl-c action which either does a copy or nothing if\n"
"    ctrl-x/v/c are not being used for clipboard actions. The default\n"
"    is to map ctrl-c to clipboard on Windows and OS X. This can be "
"overridden\n"
"    by the VI Mode Ctrl-X/C/V preference."
msgstr ""

#: src/guimgr/commands.py:637
msgid ""
"Perform vi's :set action. The command is the portion after :set.  Currently\n"
"    supports ic, noic, ai, noai, number or nu, nonumber or nonu, ro, noro, "
"sm, and\n"
"    nosm.  Multiple options can be specied in one call as for :set ic sm ai"
msgstr ""

#: src/guimgr/commands.py:667
msgid ""
"Commands available only when the editor is in visual mode (used\n"
"  for VI bindings and some others)"
msgstr ""

#: src/guimgr/commands.py:684 src/guimgr/commands.py:800
#: src/guimgr/commands.py:867
msgid "Enter editor browse mode"
msgstr ""

#: src/guimgr/commands.py:689
msgid ""
"Alter type of editor visual mode or exit back to browse mode.  Unit should "
"be \n"
"    one of 'char', 'line', or 'block'."
msgstr ""

#: src/guimgr/commands.py:783
msgid ""
"Commands available only when editor is in insert mode (used \n"
"  for VI bindings and possibly others)"
msgstr ""

#: src/guimgr/commands.py:830
msgid ""
"Perform vi mode ctrl-x action which either does a cut or nothing \n"
"    depending on whether ctrl-x/v/c are mapped to clipboard actions. The "
"default\n"
"    is to map ctrl-x to clipboard on Windows and OS X. This can be "
"overridden\n"
"    by the VI Mode Ctrl-X/C/V preference."
msgstr ""

#: src/guimgr/commands.py:841
msgid ""
"Perform vi mode ctrl-c action which either does a copy or enters browse\n"
"    mode if ctrl-x/v/c are not being used for clipboard actions. The "
"default\n"
"    is to map ctrl-c to clipboard on Windows and OS X. This can be "
"overridden\n"
"    by the VI Mode Ctrl-X/C/V preference."
msgstr ""

#: src/guimgr/commands.py:854
msgid ""
"Commands available only when editor is in replace mode (used \n"
"  for VI bindings and possibly others)"
msgstr ""

#: src/guimgr/commands.py:886
msgid ""
"Commands for windows that contain dockable tool areas.  These\n"
"  are available for the currently active window, if any."
msgstr ""

#: src/guimgr/commands.py:898
msgid "Show or minimize the horizontal tool area"
msgstr ""

#: src/guimgr/commands.py:907
msgid "Show or minimize the vertical tool area"
msgstr ""

#: src/guimgr/commands.py:943
msgid " Returns if panel window is in front of editor or dock window. "
msgstr ""

#: src/guimgr/commands.py:1023
msgid "Show the horizontal tool area"
msgstr ""

#: src/guimgr/commands.py:1031
msgid "Minimize the horizontal tool area"
msgstr ""

#: src/guimgr/commands.py:1039
msgid "Show the vertical tool area"
msgstr ""

#: src/guimgr/commands.py:1047
msgid "Minimize the vertical tool area"
msgstr ""

#: src/guimgr/commands.py:1055
msgid "Hide the horizontal tool area"
msgstr ""

#: src/guimgr/commands.py:1063
msgid "Hide the vertical tool area"
msgstr ""

#: src/guimgr/commands.py:1071
msgid ""
"Hide both the vertical and horizontal tool areas and toolbar, saving "
"previous\n"
"    state so it can be restored later with exit_fullscreen"
msgstr ""

#: src/guimgr/commands.py:1089
msgid "Restore previous non-fullscreen state of all tools and tool bar"
msgstr ""

#: src/guimgr/commands.py:1118
msgid " Show toolbars in all document windows "
msgstr ""

#: src/guimgr/commands.py:1127
msgid " Hide toolbars in all document windows "
msgstr ""

#: src/guimgr/commands.py:1136
msgid " Display the tall toolbox on the left. "
msgstr ""

#: src/guimgr/commands.py:1147
msgid " Display the tall toolbox on the right. "
msgstr ""

#: src/guimgr/commands.py:1159
msgid ""
"Commands for windows in general.  These are available for the currently \n"
"  active window, if any."
msgstr ""

#: src/guimgr/commands.py:1171
msgid ""
"Move the keyboard focus forward within the Window to the next editable\n"
"    area"
msgstr ""

#: src/guimgr/commands.py:1352
msgid ""
"Move focus to next or previous editor split, optionally wrapping when\n"
"    the end is reached."
msgstr ""

#: src/guimgr/commands.py:1373
msgid "Move focus to first editor split"
msgstr ""

#: src/guimgr/commands.py:1382
msgid "Move focus to last editor split"
msgstr ""

#: src/guimgr/commands.py:1391
msgid "Move focus to previous editor split"
msgstr ""

#: src/guimgr/commands.py:1398
msgid ""
"Move focus back to the current editor, out of any tool, if there is\n"
"    an active editor."
msgstr ""

#: src/guimgr/commands.py:1411
msgid "Show the next tool, starting with most recently shown tool"
msgstr ""

#: src/guimgr/commands.py:1436
msgid "Show the previous tool, starting with the move recently shown tool"
msgstr ""

#: src/guimgr/commands.py:1472
msgid ""
"Commands available when the tool bar search entry area has the keyboard\n"
"  focus."
msgstr ""

#: src/guimgr/commands.py:1485 src/guimgr/commands.py:1494
msgid " Cut selection "
msgstr ""

#: src/guimgr/commands.py:1503
msgid " Paste from clipboard "
msgstr ""

#: src/guimgr/commands.py:1508
msgid "Move forward one character"
msgstr ""

#: src/guimgr/commands.py:1512
msgid "Move forward one character, extending the selection"
msgstr ""

#: src/guimgr/commands.py:1516
msgid "Move forward one word"
msgstr ""

#: src/guimgr/commands.py:1520
msgid "Move forward one word, extending the selection"
msgstr ""

#: src/guimgr/commands.py:1524
msgid "Move backward one character"
msgstr ""

#: src/guimgr/commands.py:1528
msgid "Move backward one character, extending the selection"
msgstr ""

#: src/guimgr/commands.py:1532
msgid "Move backward one word"
msgstr ""

#: src/guimgr/commands.py:1536
msgid "Move backward one word, extending the selection"
msgstr ""

#: src/guimgr/commands.py:1540
msgid "Move to the beginning of the toolbar search entry"
msgstr ""

#: src/guimgr/commands.py:1544
msgid ""
"Move to the beginning of the toolbar search entry, extending the selection"
msgstr ""

#: src/guimgr/commands.py:1548
msgid "Move to the end of the toolbar search entry"
msgstr ""

#: src/guimgr/commands.py:1552
msgid "Move to the end of the toolbar search entry, extending the selection"
msgstr ""

#: src/guimgr/commands.py:1556
msgid "Delete character in front of the cursor"
msgstr ""

#: src/guimgr/commands.py:1560
msgid "Delete word in front of the cursor"
msgstr ""

#: src/guimgr/commands.py:1565
msgid "Delete character behind the cursor"
msgstr ""

#: src/guimgr/commands.py:1569
msgid "Delete word behind the cursor"
msgstr ""

#: src/guimgr/commands.py:1574 src/guimgr/commands.py:1772
msgid ""
" Standard editor commands for use when a QLineEdit instance has the \n"
"  focus. "
msgstr ""

#: src/guimgr/commands.py:1588 src/guimgr/commands.py:1786
msgid " Returns start, end of selection; when no selection, start == end "
msgstr ""

#: src/guimgr/commands.py:1812
msgid ""
" Returns start of line and start of line text for line the cursor is\n"
"    on.  Assumes a block is a line. "
msgstr ""
