# Module src_edit_commands translation file for language=en
# Copyright (C) 2003 Archaeopteryx Software, Inc.
# Wing Python IDE -- wingware.com
#
msgid ""
msgstr ""
"Project-Id-Version: 2.0.0\n"
"POT-Creation-Date: 2018-08-23 14:17+EDT\n"
"PO-Revision-Date: 2012-01-04 19:09-0600\n"
"Last-Translator: Noe Nieto <nnieto@noenieto.com>\n"
"Language-Team:  <C@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.4\n"
"X-Generator: KBabel 0.9.5\n"

#: src/edit/commands.py:74
msgid ""
"Commands that only apply to editors when they have the keyboard focus.\n"
"  These commands are also available for the Python Shell, Debug Probe, and\n"
"  Debug I/O tools, which subclass the source editor, although some of the\n"
"  commands are modified or disabled as appropriate in those contexts."
msgstr ""

#: src/edit/commands.py:97
msgid " Cut selected text "
msgstr "Cortar el texto seleccionado y situarlo en el portapapeles"

#: src/edit/commands.py:111
msgid " Copy selected text "
msgstr "Copiar el texto seleccionado al portapapeles"

#: src/edit/commands.py:123
msgid " Clear selected text "
msgstr "Limpiar el texto de las entradas seleccionadas"

#: src/edit/commands.py:135
msgid " Paste text from clipboard "
msgstr "Pegar texto del portapapeles"

#: src/edit/commands.py:142
msgid "Set the register to use for subsequent cut/copy/paste operations"
msgstr ""

#: src/edit/commands.py:148
msgid ""
"Cut or copy a specified number of characters or lines, or the current\n"
"    selection. Set cut=1 to remove the range of text from the editor after\n"
"    moving to register (otherwise it is just copied). Unit should be one of\n"
"    'char' or 'line' or 'sel' for current selection."
msgstr ""

#: src/edit/commands.py:158
msgid "Move the text spanned by the next cursor motion to a register"
msgstr ""

#: src/edit/commands.py:164
msgid ""
" Paste text from register as before or after the current position. If\n"
"    the register contains only lines, then the lines are pasted before or\n"
"    after current line (rather than at cursor).  If the register contains \n"
"    fragments of lines, the text is pasted over the current selection or\n"
"    either before or after the cursor.  Set pos = 1 to paste after, or\n"
"    -1 to paste before. Set indent=1 to indent the pasted text to match\n"
"    current line. Set cursor=-1 to place cursor before lines or cursor=1 to\n"
"    place it after lines after paste completes."
msgstr ""

#: src/edit/commands.py:175
msgid " Undo last action "
msgstr "Deshace la última acción"

#: src/edit/commands.py:186
msgid " Redo last action "
msgstr "Rehacer la última acción"

#: src/edit/commands.py:197
msgid ""
" Kill rest of line from cursor to end of line, and place\n"
"    it into the clipboard with any other contiguously removed\n"
"    lines.  End-of-line is removed only if there is nothing\n"
"    between the cursor and the end of the line. "
msgstr ""

#: src/edit/commands.py:204
msgid ""
" Yank contents of kill buffer created with kill-line into\n"
"    the edit buffer "
msgstr ""

#: src/edit/commands.py:215
msgid ""
" Initiate incremental mini-search forward from the cursor position,\n"
"    optionally entering the given search string "
msgstr ""

#: src/edit/commands.py:223
msgid ""
" Initiate incremental regular expression mini-search forward from the\n"
"    cursor position, optionally entering the given search string "
msgstr ""

#: src/edit/commands.py:230
msgid ""
" Initiate incremental mini-search backward from the cursor position,\n"
"    optionally entering the given search string "
msgstr ""

#: src/edit/commands.py:237
msgid ""
" Initiate incremental regular expression mini-search backward from the\n"
"    cursor position, optionally entering the given search string "
msgstr ""

#: src/edit/commands.py:244
msgid ""
"Repeat the most recent isearch, using same string and regex/text.\n"
"    Reverse direction when reverse is True."
msgstr ""

#: src/edit/commands.py:253
msgid ""
" Initiate incremental mini-search forward from the cursor position,\n"
"    using current selection as the search string.  Set persist=False to\n"
"    do the search but end the interactive search session immediately."
msgstr ""

#: src/edit/commands.py:262
msgid ""
" Initiate incremental mini-search backward from the cursor position,\n"
"    using current selection as the search string.  Set persist=False to\n"
"    do the search but end the interactive search session immediately."
msgstr ""

#: src/edit/commands.py:275
msgid ""
"Search for the given character. Searches to right if dir > 0 and to\n"
"    left if dir < 0. Optionally place cursor pos characters to left or "
"right\n"
"    of the target (e.g., use -1 to place one to left). If repeat > 1, the "
"Nth\n"
"    match is found. Set single_line=1 to search only within the current\n"
"    line."
msgstr ""

#: src/edit/commands.py:289
msgid "Search direction (>0 to right, <0 to left)"
msgstr ""

#: src/edit/commands.py:290
msgid "Direction: "
msgstr ""

#: src/edit/commands.py:291
msgid ""
"Target cursor position relative to search target, negative to move to left"
msgstr ""

#: src/edit/commands.py:292
msgid "Target Pos: "
msgstr ""

#: src/edit/commands.py:293 src/edit/commands.py:312
msgid "Number of matches to traverse"
msgstr ""

#: src/edit/commands.py:294 src/edit/commands.py:313
msgid "Repeat: "
msgstr ""

#: src/edit/commands.py:295
msgid "Search only with current line"
msgstr ""

#: src/edit/commands.py:296
msgid "Single Line: "
msgstr ""

#: src/edit/commands.py:301
msgid ""
"Repeat the last search_char operation, optionally in the opposite\n"
"    direction."
msgstr ""

#: src/edit/commands.py:310
msgid "Change to opposite direction of search"
msgstr ""

#: src/edit/commands.py:311
msgid "Opposite: "
msgstr ""

#: src/edit/commands.py:321
msgid "Repeat the last editor command"
msgstr ""

#: src/edit/commands.py:325
msgid "Show the auto-completer for current cursor position"
msgstr ""

#: src/edit/commands.py:336
msgid ""
" Match brace at current cursor position, selecting all text between\n"
"    the two and hilighting the braces "
msgstr ""

#: src/edit/commands.py:344
msgid " Place a tab character at the current cursor position "
msgstr ""

#: src/edit/commands.py:350
msgid " Outdent line at current position "
msgstr ""

#: src/edit/commands.py:361
msgid ""
"Implement the tab key, the action of which is configurable by preference"
msgstr ""

#: src/edit/commands.py:365
msgid ""
"Implement smart handling of tab key.  The behavior varies by context\n"
"    as follows:\n"
"    \n"
"    * In Non-Python code, always indents to the next indent stop\n"
"    * On a non-blank line when cursor is at end or before a comment, insert "
"tab\n"
"    * On a where indent does not match the computed indent level, \n"
"      move to the matching indent level\n"
"    * Otherwise decrease indent one level (thus a non-blank line toggles \n"
"      between matching position and one block higher)\n"
"      \n"
"    "
msgstr ""

#: src/edit/commands.py:380
msgid ""
"Send one or more keys to the editor. Send a string to enter each key in the "
"string,\n"
"    or a list of strings and/or (mod, key) tuples where mod is a string "
"containing any of\n"
"    case insensitive 'shift', 'ctrl', or 'alt'.  Valid examples::\n"
"    \n"
"      \"testme\"\n"
"      \"TestMe\"\n"
"      [\"test\", ('Alt', 'X'), \"m\"]\n"
"      [('ctrl-Shift', 'X'), ('shift','E'),]\n"
"    \n"
"    "
msgstr ""

#: src/edit/commands.py:416
msgid ""
"Indent the current line or selected region to match indentation of \n"
"    preceding non-blank line.  Set toggle=True to indent instead of one\n"
"    level higher if already at the matching position."
msgstr ""

#: src/edit/commands.py:424
msgid ""
" Indent to next indent stop from the current position.  Acts like indent "
"command\n"
"    if selection covers multiple lines. "
msgstr ""

#: src/edit/commands.py:430
msgid ""
" Move to beginning of current line. When toggle is True, moves to the\n"
"    end of the leading white space if already at the beginning of the line\n"
"    (and vice versa)."
msgstr ""

#: src/edit/commands.py:436
msgid ""
" Move to beginning of current line, adjusting the selection range to\n"
"    the new position. When toggle is True, moves to the end of the leading\n"
"    white space if already at the beginning of the line (and vice versa)."
msgstr ""

#: src/edit/commands.py:442
msgid ""
" Move to end of the leading white space, if any, on the current line.\n"
"    If toggle is True, moves to the beginning of the line if already at the\n"
"    end of the leading white space (and vice versa)."
msgstr ""

#: src/edit/commands.py:448
msgid ""
" Move to end of the leading white space, if any, on the current line,\n"
"    adjusting the selection range to the new position.  If toggle is True,\n"
"    moves to the beginning of the line if already at the end of the leading\n"
"    white space (and vice versa)."
msgstr ""

#: src/edit/commands.py:455
msgid " Move to beginning of current wrapped line"
msgstr ""

#: src/edit/commands.py:459
msgid " Move to beginning of current wrapped line, extending selection"
msgstr ""

#: src/edit/commands.py:463
msgid " Move to first non-blank character at beginning of current wrapped line"
msgstr ""

#: src/edit/commands.py:467
msgid ""
" Move to first non-blank character at beginning of current wrapped line,\n"
"    extending selection"
msgstr ""

#: src/edit/commands.py:472
msgid " Move to end of current line"
msgstr ""

#: src/edit/commands.py:476
msgid ""
" Move to end of current line, adjusting the selection range \n"
"    to new position "
msgstr ""

#: src/edit/commands.py:481
msgid " Move to end of current wrapped line"
msgstr ""

#: src/edit/commands.py:485
msgid " Move to end of current wrapped line, extending selection"
msgstr ""

#: src/edit/commands.py:489
msgid " Move to middle of current wrapped line"
msgstr ""

#: src/edit/commands.py:493
msgid " Move to middle of current wrapped line, extending selection"
msgstr ""

#: src/edit/commands.py:497
msgid ""
" Move to screen next line, optionally repositioning character within\n"
"    line: 'same' to leave in same horizontal position, 'start' at start, "
"'end'\n"
"    at end, or 'fnb' for first non-blank char."
msgstr ""

#: src/edit/commands.py:503
msgid ""
" Move to next screen line, adjusting the selection range to new\n"
"    position, optionally repositioning character within line: same' to "
"leave\n"
"    in same horizontal position, 'start' at start, 'end' at end, 'fnb' for\n"
"    first non-blank char, or 'xcode' to simulate XCode style Shift-Alt line\n"
"    selection."
msgstr ""

#: src/edit/commands.py:511
msgid ""
" Move to next screen line, adjusting the rectangular selection range to new\n"
"    position, optionally repositioning character within line: same' to "
"leave\n"
"    in same horizontal position, 'start' at start, 'end' at end, or 'fnb' "
"for\n"
"    first non-blank char."
msgstr ""

#: src/edit/commands.py:518
msgid ""
" Move to previous screen line, optionally repositioning character\n"
"    within line: same' to leave in same horizontal position, 'start' at "
"start,\n"
"    'end' at end, or 'fnb' for first non-blank char."
msgstr ""

#: src/edit/commands.py:524
msgid ""
" Move to previous screen line, adjusting the selection range to new\n"
"    position, optionally repositioning character within line: same' to "
"leave\n"
"    in same horizontal position, 'start' at start, 'end' at end, 'fnb' for\n"
"    first non-blank char, or 'xcode' to simulate XCode style Shift-Alt line\n"
"    selection."
msgstr ""

#: src/edit/commands.py:532
msgid ""
" Move to previous screen line, adjusting the rectangular selection range to "
"new\n"
"    position, optionally repositioning character within line: same' to "
"leave\n"
"    in same horizontal position, 'start' at start, 'end' at end, or 'fnb' "
"for\n"
"    first non-blank char."
msgstr ""

#: src/edit/commands.py:539
msgid ""
" Move to next line in file, repositioning character within line:\n"
"    'start' at start, 'end' at end, or 'fnb' for first non-blank char."
msgstr ""

#: src/edit/commands.py:544
msgid ""
" Move to previous line in file, repositioning character within line:\n"
"    'start' at start, 'end' at end, or 'fnb' for first non-blank char."
msgstr ""

#: src/edit/commands.py:549
msgid ""
"Move to the next blank line in the file, if any.  If threshold>0 then a\n"
"    line is considered blank if it contains less than that many characters\n"
"    after leading and trailing whitespace are removed."
msgstr ""

#: src/edit/commands.py:555
msgid ""
"Move to the previous blank line in the file, if any.  If threshold>0 then a\n"
"    line is considered blank if it contains less than that many characters\n"
"    after leading and trailing whitespace are removed."
msgstr ""

#: src/edit/commands.py:561
msgid " Move cursor forward one character "
msgstr ""

#: src/edit/commands.py:565
msgid ""
" Move cursor forward one character, adjusting the selection \n"
"    range to new position "
msgstr ""

#: src/edit/commands.py:570
msgid ""
" Move cursor forward one character, adjusting the rectangular selection \n"
"    range to new position "
msgstr ""

#: src/edit/commands.py:575
msgid " Move cursor backward one character "
msgstr ""

#: src/edit/commands.py:579
msgid ""
" Move cursor backward one character, adjusting the selection \n"
"    range to new position "
msgstr ""

#: src/edit/commands.py:584
msgid ""
" Move cursor backward one character, adjusting the rectangular selection \n"
"    range to new position "
msgstr ""

#: src/edit/commands.py:589
msgid ""
"Move cursor forward one word. Optionally, provide a string that\n"
"    contains the delimiters to define which characters are part of a word.\n"
"    Gravity may be \"start\" or \"end\" to indicate whether cursor is "
"placed\n"
"    at start or end of the word."
msgstr ""

#: src/edit/commands.py:596
msgid ""
"Move cursor forward one word, adjusting the selection range to new\n"
"    position. Optionally, provide a string that contains the delimiters to\n"
"    define which characters are part of a word. Gravity may be \"start\" or\n"
"    \"end\" to indicate whether cursor is placed at start or end of the word."
msgstr ""

#: src/edit/commands.py:603
msgid ""
" Move cursor backward one word. Optionally, provide a string that\n"
"    contains the delimiters to define which characters are part of a word.\n"
"    Gravity may be \"start\" or \"end\" to indicate whether cursor is placed "
"at\n"
"    start or end of the word."
msgstr ""

#: src/edit/commands.py:610
msgid ""
" Move cursor backward one word, adjusting the selection range to new\n"
"    position. Optionally, provide a string that contains the delimiters to\n"
"    define which characters are part of a word. Gravity may be \"start\" or\n"
"    \"end\" to indicate whether cursor is placed at start or end of the word."
msgstr ""

#: src/edit/commands.py:617
msgid "Move cursor forward one paragraph (to next all-whitespace line)."
msgstr ""

#: src/edit/commands.py:621
msgid ""
"Move cursor forward one paragraph (to next all-whitespace line),\n"
"    adjusting the selection range to new position."
msgstr ""

#: src/edit/commands.py:626
msgid "Move cursor backward one paragraph (to next all-whitespace line)."
msgstr ""

#: src/edit/commands.py:630
msgid ""
"Move cursor backward one paragraph (to next all-whitespace line),\n"
"    adjusting the selection range to new position."
msgstr ""

#: src/edit/commands.py:635
msgid " Move cursor forward one page "
msgstr ""

#: src/edit/commands.py:639
msgid ""
" Move cursor forward one page, adjusting the selection \n"
"    range to new position "
msgstr ""

#: src/edit/commands.py:644
msgid " Move cursor backward one page "
msgstr ""

#: src/edit/commands.py:648
msgid ""
" Move cursor backward one page, adjusting the selection \n"
"    range to new position "
msgstr ""

#: src/edit/commands.py:653
msgid " Move cursor to start of document "
msgstr ""

#: src/edit/commands.py:657
msgid ""
" Move cursor to start of document, adjusting the selection \n"
"    range to new position "
msgstr ""

#: src/edit/commands.py:662
msgid " Move cursor to end of document "
msgstr ""

#: src/edit/commands.py:666
msgid ""
" Move cursor to end of document, adjusting the selection \n"
"    range to new position "
msgstr ""

#: src/edit/commands.py:671
msgid ""
" Set start of text marking for selection at current cursor\n"
"    position.  Subsequently, all cursor move operations will automatically\n"
"    extend the text selection until stop-mark-command is issued.  Unit\n"
"    defines what is selected: can be one of char, line, or block (rectangle)."
msgstr ""

#: src/edit/commands.py:678
msgid ""
" Stop text marking for selection at current cursor position,\n"
"    leaving the selection set as is.  Subsequent cursor move operations\n"
"    will deselect the range and set selection to cursor position.  \n"
"    Deselect immediately when deselect is True."
msgstr ""

#: src/edit/commands.py:685
msgid " Clear any pending move command action, as for VI mode"
msgstr ""

#: src/edit/commands.py:689
msgid ""
"When currently marking text, this exchanges the current position\n"
"    and mark ends of the current selection"
msgstr ""

#: src/edit/commands.py:694
msgid " Delete one character in front of the cursor "
msgstr ""

#: src/edit/commands.py:698
msgid ""
" Delete one character in front of the cursor unless at end of line,\n"
"    in which case delete backward.  Do nothing if the line is empty.  This \n"
"    is VI style 'x' in browser mode."
msgstr ""

#: src/edit/commands.py:704
msgid ""
" Delete one char in front of the cursor and enter insert mode (when\n"
"    working in modal key bindings)"
msgstr ""

#: src/edit/commands.py:710
msgid " Delete one word in front of the cursor "
msgstr ""

#: src/edit/commands.py:714
msgid ""
" Delete one word in front of the cursor and enter insert mode (when\n"
"    working in modal key bindings)"
msgstr ""

#: src/edit/commands.py:720
msgid ""
" Delete one character behind the cursor, or the current selection\n"
"    if not empty. "
msgstr ""

#: src/edit/commands.py:725
msgid " Delete one word behind of the cursor "
msgstr ""

#: src/edit/commands.py:729
msgid ""
"Delete the current line or lines when the selection spans multiple\n"
"    lines or given repeat is > 1"
msgstr ""

#: src/edit/commands.py:734
msgid ""
"Delete the current line or lines when the selection spans multiple\n"
"    lines or given repeat is > 1.  Enters insert mode (when working with\n"
"    modal key bindings)."
msgstr ""

#: src/edit/commands.py:741
msgid "Delete everything between the cursor and start of line"
msgstr ""

#: src/edit/commands.py:745
msgid "Delete everything between the cursor and end of line"
msgstr ""

#: src/edit/commands.py:749
msgid ""
"Delete everything between the cursor and end of line and enter insert\n"
"    move (when working in a modal editor key binding)"
msgstr ""

#: src/edit/commands.py:755
msgid ""
"Delete given range of lines, copying them into given register (or\n"
"    currently selected default register if register is None"
msgstr ""

#: src/edit/commands.py:760
msgid "Delete the text covered by the next cursor move command."
msgstr ""

#: src/edit/commands.py:764
msgid ""
"Delete the text covered by the next cursor move command and then\n"
"    enter insert mode (when working in a modal editor key binding)"
msgstr ""

#: src/edit/commands.py:770
msgid ""
"Move the given range of lines to the given target line.  Moves to current\n"
"    line if target_line is '.'."
msgstr ""

#: src/edit/commands.py:775
msgid ""
"Copy the given range of lines to the given target line.  Copies to current\n"
"    line if target_line is '.'."
msgstr ""

#: src/edit/commands.py:780
msgid ""
"Swap the line at start of current selection with the line that follows it,\n"
"    or the preceding line if previous is True."
msgstr ""

#: src/edit/commands.py:814
msgid ""
"Duplicate the current line or lines. Places the duplicate on the line\n"
"    following the selection if pos is 'below' or before the selection if it "
"is\n"
"    'above'."
msgstr ""

#: src/edit/commands.py:846
msgid "Duplicate the current line or lines above the selection."
msgstr ""

#: src/edit/commands.py:850
msgid ""
"Filter the lines covered by the next cursor move command\n"
"    through an external command and replace the lines with the result"
msgstr ""

#: src/edit/commands.py:855
msgid ""
"Filter the current selection through an external command and replace\n"
"    the lines with the result"
msgstr ""

#: src/edit/commands.py:860
msgid ""
"Filter a range of lines in the editor through an external command\n"
"    and replace the lines with the result.  Filters the whole file by\n"
"    default.  Filters nothing and opens up a scratch buffer with the\n"
"    output of the command if start_line and end_line are both -1."
msgstr ""

#: src/edit/commands.py:867
msgid ""
"Enclose the selection or the rest of the current line when there is no\n"
"    selection with the given start and end strings.  The caret is moved to "
"the\n"
"    end of the enclosed text."
msgstr ""

#: src/edit/commands.py:873
msgid ""
"Change case of the current selection, or character ahead of the cursor if\n"
"    there is no selection, to upper case"
msgstr ""

#: src/edit/commands.py:878
msgid ""
"Change case of the current selection, or character ahead of the cursor if\n"
"    there is no selection, to lower case"
msgstr ""

#: src/edit/commands.py:883
msgid ""
"Change case of the current selection, or character ahead of the cursor if\n"
"    there is no selection, to title case (first letter of each word "
"capitalized)"
msgstr ""

#: src/edit/commands.py:888
msgid ""
"Change case of the current selection, or character ahead of the cursor if\n"
"    there is no selection, so each letter is the opposite of its current case"
msgstr ""

#: src/edit/commands.py:893
msgid "Change case of text spanned by next cursor movement to upper case"
msgstr ""

#: src/edit/commands.py:897
msgid "Change case of text spanned by next cursor movement to lower case"
msgstr ""

#: src/edit/commands.py:901
msgid ""
"Change case of text spanned by next cursor movement to title case\n"
"    (first letter of each word capitalized)"
msgstr ""

#: src/edit/commands.py:906
msgid ""
"Change case of text spanned by next cursor movement so each letter is\n"
"    the opposite of its current case"
msgstr ""

#: src/edit/commands.py:911
msgid " Select all text in the editor "
msgstr ""

#: src/edit/commands.py:915
msgid " Select the current line or lines "
msgstr ""

#: src/edit/commands.py:919
msgid "Open the current line by inserting a newline after the caret"
msgstr ""

#: src/edit/commands.py:923
msgid ""
" Place a new line at the current cursor position.  Override the auto-indent\n"
"    preference by setting auto_indent to 'never' to avoid indent, 'always' "
"to\n"
"    auto-indent, and 'blank-only' to auto-indent only on blank lines."
msgstr ""

#: src/edit/commands.py:930
msgid " Place a new line before the current line "
msgstr ""

#: src/edit/commands.py:934
msgid " Place a new line after the current line "
msgstr ""

#: src/edit/commands.py:938
msgid ""
"Move the current line or lines up one line, optionally\n"
"    indenting to match the new position"
msgstr ""

#: src/edit/commands.py:943
msgid ""
"Move the current line or lines up down line, optionally\n"
"    indenting to match the new position"
msgstr ""

#: src/edit/commands.py:948
msgid " Place a form feed character at the current cursor position "
msgstr ""

#: src/edit/commands.py:952
msgid " Scroll to current cursor position, if not already visible "
msgstr ""

#: src/edit/commands.py:956
msgid ""
"Scroll to the top of the text in the editor.  Set move_caret to control\n"
"    whether the the caret is moved."
msgstr ""

#: src/edit/commands.py:961
msgid ""
"Scroll to the end of the text in the editor.  Set move_caret to control\n"
"    whether the caret is moved."
msgstr ""

#: src/edit/commands.py:966
msgid " Scroll so cursor is centered on display "
msgstr ""

#: src/edit/commands.py:970
msgid " Scroll so cursor is centered at top of display "
msgstr ""

#: src/edit/commands.py:974
msgid " Scroll so cursor is centered at bottom of display "
msgstr ""

#: src/edit/commands.py:978
msgid ""
" Scroll text up a page w/o moving cursor's relative position on screen.\n"
"    Repeat is number of pages or if >0 and <1.0 then percent of screen.  Set "
"move_cursor\n"
"    to False to leave cursor in current position within the source, "
"otherwise it is\n"
"    moved so the cursor remains on same screen line."
msgstr ""

#: src/edit/commands.py:985
msgid ""
" Scroll text down a page w/o moving cursor's relative position on screen.\n"
"    Repeat is number of pages or if >0 and <1.0 then percent of screen.  Set "
"move_cursor\n"
"    to False to leave cursor in current position within the source, "
"otherwise it is\n"
"    moved so the cursor remains on same screen line."
msgstr ""

#: src/edit/commands.py:992
msgid ""
" Scroll text up a line w/o moving cursor's relative position on screen.\n"
"    Repeat is number of lines or if >0 and <1.0 then percent of screen.  Set "
"move_cursor\n"
"    to False to leave cursor in current position within the source, "
"otherwise it is\n"
"    moved so the cursor remains on same screen line."
msgstr ""

#: src/edit/commands.py:999
msgid ""
" Scroll text down a line w/o moving cursor's relative position on screen.\n"
"    Repeat is number of lines or if >0 and <1.0 then percent of screen.  Set "
"move_cursor\n"
"    to False to leave cursor in current position within the source, "
"otherwise it is\n"
"    moved so the cursor remains on same screen line."
msgstr ""

#: src/edit/commands.py:1006
msgid ""
" Scroll text left a column w/o moving cursor's relative position on screen.\n"
"    Repeat is number of columns or if >0 and <1.0 then percent of screen."
msgstr ""

#: src/edit/commands.py:1011
msgid ""
" Scroll text right a column w/o moving cursor's relative position on "
"screen.\n"
"    Repeat is number of columns or if >0 and <1.0 then percent of screen."
msgstr ""

#: src/edit/commands.py:1016
msgid " Move cursor to center of display (without scrolling) "
msgstr ""

#: src/edit/commands.py:1020
msgid ""
" Move cursor to top of display (without scrolling), optionally\n"
"    at an offset of given number of lines below top"
msgstr ""

#: src/edit/commands.py:1025
msgid ""
" Move cursor to bottom of display (without scrolling), optionally\n"
"    at an offset of given number of lines before bottom"
msgstr ""

#: src/edit/commands.py:1030
msgid " Turn on display of the current text selection "
msgstr ""

#: src/edit/commands.py:1034
msgid " Turn off display of the current text selection "
msgstr ""

#: src/edit/commands.py:1038
msgid " Cancel current editor command "
msgstr ""

#: src/edit/commands.py:1042
msgid " Complete the current active autocompletion. "
msgstr ""

#: src/edit/commands.py:1050
msgid " Cancel any active autocompletion. "
msgstr ""

#: src/edit/commands.py:1058
msgid " Activate the 1st symbol menu for the editor. "
msgstr ""

#: src/edit/commands.py:1064
msgid " Activate the 2nd symbol menu for the editor. "
msgstr ""

#: src/edit/commands.py:1070
msgid " Activate the 3rd symbol menu for the editor. "
msgstr ""

#: src/edit/commands.py:1076
msgid " Activate the 4th symbol menu for the editor. "
msgstr ""

#: src/edit/commands.py:1082
msgid " Activate the 5th symbol menu for the editor. "
msgstr ""

#: src/edit/commands.py:1088
msgid "Turn on profiling for the current source editor"
msgstr ""

#: src/edit/commands.py:1097
msgid "Stop profiling and print stats to stdout"
msgstr ""

#: src/edit/commands.py:1106
msgid "Copy the current lines(s) to clipboard"
msgstr ""

#: src/edit/commands.py:1111
msgid " Cut the current line(s) to clipboard. "
msgstr ""

#: src/edit/commands.py:1116
msgid ""
" Cut the current selection or current line if there is no\n"
"    selection.  The text is placed on the clipboard. "
msgstr ""

#: src/edit/commands.py:1122
msgid ""
" Copy the current selection or current line if there is no\n"
"    selection.  The text is placed on the clipboard. "
msgstr ""

#: src/edit/commands.py:1128
msgid " Rescan file for code analysis. "
msgstr ""

#: src/edit/commands.py:1138
msgid " Strip trailing whitespace from each line. "
msgstr ""

#: src/edit/commands.py:1146
msgid ""
" Ensure the support object is created and set a history anchor unless \n"
"    set_history_anchor arg is false. "
msgstr ""

#: src/edit/commands.py:1160
msgid ""
" Select more code on either the current line or larger multi-line\n"
"    blocks. "
msgstr ""

#: src/edit/commands.py:1172
msgid " Select less code; undoes the last select-more command "
msgstr ""

#: src/edit/commands.py:1182
msgid " Select the statement the cursor is in. "
msgstr ""

#: src/edit/commands.py:1190
msgid ""
" Select the next statement.  Will ignore indented statements\n"
"    under the current statements unless ignore_indented is False.\n"
"    Specify a count of more than 1 to go forward multiple statements. "
msgstr ""

#: src/edit/commands.py:1200
msgid ""
" Select the previous statement.  Will ignore indented statements\n"
"    under the current statements unless ignore_indented is False.\n"
"    Specify a count of more than 1 to go back multiple statements. "
msgstr ""

#: src/edit/commands.py:1210
msgid " Select the block the cursor is in. "
msgstr ""

#: src/edit/commands.py:1218
msgid ""
" Select the next block.  Will ignore indented blocks\n"
"    under the current block unless ignore_indented is False.\n"
"    Specify a count of more than 1 to go forward multiple blocks. "
msgstr ""

#: src/edit/commands.py:1228
msgid ""
" Select the previous block.  Will ignore indented blocks\n"
"    under the current block unless ignore_indented is False.\n"
"    Specify a count of more than 1 to go backward multiple blocks. "
msgstr ""

#: src/edit/commands.py:1238
msgid " Select the scope the cursor is in. "
msgstr ""

#: src/edit/commands.py:1247
msgid ""
" Select the next scope.  Specify a count of more than 1 to go\n"
"    forward multiple scopes.  If sibling_only is true, move only to other\n"
"    scopes of the same parent. "
msgstr ""

#: src/edit/commands.py:1257
msgid ""
" Select the previous scope.  Specify a count of more than 1 to go\n"
"    backward multiple scopes.  If sibling_only is true, move only to other\n"
"    scopes of the same parent. "
msgstr ""

#: src/edit/commands.py:1267
msgid " Goes to the method that is overridden by the current method "
msgstr ""

#: src/edit/commands.py:1301
msgid ""
" Add another selection containing the text of the current selection.\n"
"      If skip_current is true, the current selection will be deselected.  "
"If \n"
"      nothing is currently selected, select the current word.  Searches \n"
"      backwards if reverse is true. "
msgstr ""

#: src/edit/commands.py:1362
msgid " Drop all exceptions except the main selection "
msgstr ""

#: src/edit/commands.py:1372
msgid ""
" Add an extra selection for all occurrences of the main selection text\n"
"      in the file "
msgstr ""

#: src/edit/commands.py:1383
msgid ""
" Returns following for main selection: sel, txt, whole_words\n"
"      If the txt of the main selection is not a whole word, whole_words\n"
"      will be false; otherwise it will be the passed in whole_words arg "
msgstr ""

#: src/edit/commands.py:1410
msgid ""
" Get ordered list of all line ranges that are at least partially selected "
msgstr ""

#: src/edit/commands.py:1437
msgid ""
" Return set of all scopes (classes if cls is true; functions/methods\n"
"      if func is true) that any selection is in "
msgstr ""

#: src/edit/commands.py:1474
msgid ""
" Add an extra selection for all occurrences of the main selection text\n"
"      in classes that contain one or more selections "
msgstr ""

#: src/edit/commands.py:1491
msgid ""
" Add an extra selection for all occurrences of the main selection text\n"
"      in functions / methods that contain one or more selections "
msgstr ""

#: src/edit/commands.py:1509
msgid ""
" Add selections in all scopes w/ selections.  If cls is true, class\n"
"      scopes are added, if func is true, functions/methods are added. "
msgstr ""

#: src/edit/commands.py:1537
msgid ""
" Add an extra selection for all occurrences of the main selection text\n"
"      in blocks that contain one or more selections "
msgstr ""

#: src/edit/commands.py:1572
msgid ""
" Add selection for all occurrences of txt between start and end\n"
"      positions.  Doesn't add a selection that matches an existing "
"selection\n"
"      but allow overlapping selections "
msgstr ""

#: src/edit/commands.py:1645
msgid ""
" Toggle the value of the default flag for whether the selection add\n"
"      commands match case or not when looking for additional occurrences "
msgstr ""

#: src/edit/commands.py:1651
msgid ""
" Toggle the value of the default flag for whether the selection add\n"
"      commands only add whole words when looking for additional occurrences "
msgstr ""

#: src/edit/commands.py:1657
msgid ""
" Toggle the value of the default flag for whether the selection add\n"
"      commands wrap when looking for additional occurrences "
msgstr ""

#: src/edit/commands.py:1663
msgid ""
" Show the selections popup; this overrides the preference setting\n"
"      for the current file "
msgstr ""

#: src/edit/commands.py:1678
msgid ""
" Hide the selections popup; this overrides the preference setting\n"
"      for the current file "
msgstr ""

#: src/edit/commands.py:1694
msgid ""
"Editor commands that act on the current (most recently active) source \n"
"  editor, whether or not it currently has the keyboard focus."
msgstr ""

#: src/edit/commands.py:1751
msgid "Raise editor window if necessary in this windowing mode"
msgstr ""

#: src/edit/commands.py:1761
msgid ""
" Initiate incremental mini-search query/replace from the cursor \n"
"    position. "
msgstr ""

#: src/edit/commands.py:1769
msgid "The search string"
msgstr "Cadena de búsqueda"

#: src/edit/commands.py:1772
msgid "Search:"
msgstr "Buscar:"

#: src/edit/commands.py:1773 src/edit/commands.py:1794
msgid "The replacement string"
msgstr "Cadena de reemplazo"

#: src/edit/commands.py:1776 src/edit/commands.py:1797
msgid "Replace:"
msgstr "Reemplazar:"

#: src/edit/commands.py:1782
msgid ""
" Initiate incremental mini-search query/replace from the cursor \n"
"    position.  The search string is treated as a regular expression."
msgstr ""

#: src/edit/commands.py:1790
msgid "The search regular expression"
msgstr ""

#: src/edit/commands.py:1793
msgid "Regex:"
msgstr "Expresión regular:"

#: src/edit/commands.py:1802
msgid ""
" Initiate incremental mini-search query/replace within the given selection.\n"
"    This is similar to query_replace but allows some additional options::\n"
"    \n"
"      confirm -- True to confirm each replace\n"
"      range_limit -- None to replace between current selection start and end "
"of document,\n"
"        1 to limit operation to current selection or to current line if "
"selection is empty,\n"
"        (start, end) to limit operation to within given selection range, or "
"\"first|last\"\n"
"        to limit operating withing given range of lines (1=first).\n"
"      match_limit -- None to replace any number of matches, or limit of "
"number of replaces.\n"
"        When set to \"l\" plus a number, limits to that number of matches "
"per line,\n"
"        rather than as a whole.\n"
"      regex -- Treat search string as a regular expression\n"
"      \n"
"    "
msgstr ""

#: src/edit/commands.py:1827
msgid ""
"Repeat the last query replace or range replace operation on the current "
"line.\n"
"    The first match is replaced without confirmation."
msgstr ""

#: src/edit/commands.py:1833
msgid ""
" Replace all occurrences of a string from the cursor position to \n"
"    end of file. "
msgstr ""

#: src/edit/commands.py:1843
msgid ""
" Replace all occurrences of a string from the cursor position to \n"
"    end of file.  The search string is treated as a regular expression."
msgstr ""

#: src/edit/commands.py:1851
msgid ""
"Replace num characters with given character.  Set line_mode to multiline to\n"
"    allow replacing across lines, extend to replace on current line and then "
"extend\n"
"    the line length, and restrict to replace only if enough characters exist "
"on\n"
"    current line after cursor position."
msgstr ""

#: src/edit/commands.py:1865
msgid ""
" Zoom in, increasing the text display size temporarily by one font size "
msgstr ""

#: src/edit/commands.py:1869
msgid ""
" Zoom out, increasing the text display size temporarily by one font size "
msgstr ""

#: src/edit/commands.py:1873
msgid "Reset font zoom factor back to zero"
msgstr ""

#: src/edit/commands.py:1877
msgid " Toggle status of overtyping mode "
msgstr ""

#: src/edit/commands.py:1881
msgid " Turn on all special marks for displaying white space and end-of-line  "
msgstr ""

#: src/edit/commands.py:1891
msgid " Turn off all special marks for displaying white space and end-of-line "
msgstr ""

#: src/edit/commands.py:1900
msgid " Turn on special marks for displaying white space "
msgstr ""

#: src/edit/commands.py:1909
msgid " Turn off special marks for displaying white space "
msgstr ""

#: src/edit/commands.py:1918
msgid " Turn on special marks for displaying end-of-line chars "
msgstr ""

#: src/edit/commands.py:1927
msgid " Turn off special marks for displaying end-of-line chars "
msgstr ""

#: src/edit/commands.py:1936
msgid " Turn on special marks for displaying indent level "
msgstr ""

#: src/edit/commands.py:1945
msgid " Turn off special marks for displaying indent level "
msgstr ""

#: src/edit/commands.py:1954
msgid ""
"Set editor to be readonly.  This cannot be done if the editor contains\n"
"    any unsaved edits."
msgstr ""

#: src/edit/commands.py:1964
msgid ""
"Set editor to be writable.  This can be used to override the read-only\n"
"    state used initially for editors displaying files that are read-only on "
"disk."
msgstr ""

#: src/edit/commands.py:1974
msgid " Save the current text file to disk "
msgstr ""

#: src/edit/commands.py:1980
msgid " Close the current text file "
msgstr ""

#: src/edit/commands.py:1993
msgid " Return arg info sequence for insert-file command. "
msgstr ""

#: src/edit/commands.py:1999
msgid "The file to insert"
msgstr "Elija el archivo a insertar"

#: src/edit/commands.py:2005
msgid "Insert file"
msgstr "Insertar archivo"

#: src/edit/commands.py:2013
msgid ""
" Insert a file at current cursor position, prompting user\n"
"    for file selection "
msgstr ""

#: src/edit/commands.py:2018
msgid ""
"Insert the output for the given command at current cursor position.\n"
"    Some special characters in the command line (if not escaped with \\) "
"will\n"
"    be replaced as follows::\n"
"    \n"
"      % -- Current file's full path name\n"
"      # -- Previous file's full path name\n"
"      \n"
"    "
msgstr ""

#: src/edit/commands.py:2029 src/edit/commands.py:2082
msgid " Return arg info sequence for goto-line command. "
msgstr ""

#: src/edit/commands.py:2034
msgid "The line number"
msgstr "Número de línea"

#: src/edit/commands.py:2038 src/edit/commands.py:2053
msgid "Go To Line"
msgstr "Ir a la línea"

#: src/edit/commands.py:2046
msgid " Position cursor at start of given line number "
msgstr ""

#: src/edit/commands.py:2056
msgid " Scroll to and select the given line number"
msgstr ""

#: src/edit/commands.py:2067
msgid ""
"Position cursor at start of given line number (1=first, -1 = last).\n"
"    This differs from goto-line in that it never prompts for a line number "
"but\n"
"    instead uses the previously entered numeric modifier or defaults to "
"going\n"
"    to line one. The cursor can be positioned at 'start', 'end', or 'fnb' "
"for\n"
"    first non-blank character."
msgstr ""

#: src/edit/commands.py:2077
msgid "Same as goto_nth_line but defaults to end of file if no lineno is given"
msgstr ""

#: src/edit/commands.py:2085
msgid "The percent in file"
msgstr ""

#: src/edit/commands.py:2087
msgid "Goto percent"
msgstr ""

#: src/edit/commands.py:2093
msgid ""
"Position cursor at start of line at given percent in file.  This\n"
"    uses the previously entered numeric modifier or defaults to going\n"
"    to line one.  The cursor can be positioned at 'start', 'end', or\n"
"    'fnb' for first non-blank character, or in VI mode it will do \n"
"    brace matching operation to reflect how VI overrides this command."
msgstr ""

#: src/edit/commands.py:2102
msgid " Return arg info sequence for goto-column command. "
msgstr ""

#: src/edit/commands.py:2105
msgid "The column to move to"
msgstr ""

#: src/edit/commands.py:2107
msgid "Goto column"
msgstr ""

#: src/edit/commands.py:2114
msgid "Move cursor to given column"
msgstr ""

#: src/edit/commands.py:2120
msgid ""
" Start definition of a keyboard macro.  If register=None then the user\n"
"    is prompted to enter a letter a-z under which to file the macro.  "
"Otherwise,\n"
"    register 'a' is used by default."
msgstr ""

#: src/edit/commands.py:2135
msgid " Stop definition of a keyboard macro "
msgstr ""

#: src/edit/commands.py:2143
msgid ""
" Execute most recently recorded keyboard macro.  If register is None then "
"the\n"
"    user is asked to enter a letter a-z for the register where the macro is "
"filed.\n"
"    Otherwise, register 'a' is used by default."
msgstr ""

#: src/edit/commands.py:2158
msgid ""
"Indent the selected region one level of indentation.  Set sel to None\n"
"    to use preference to determine selection behavior, or \"never-select\" "
"to\n"
"    unselect after indent, \"always-select\" to always select after indent, "
"or\n"
"    \"retain-select\" to retain current selection after indent."
msgstr ""

#: src/edit/commands.py:2167
msgid ""
"Outdent the selected region one level of indentation.  Set sel to None\n"
"    to use preference to determine selection behavior, or \"never-select\" "
"to\n"
"    unselect after indent, \"always-select\" to always select after indent, "
"or\n"
"    \"retain-select\" to retain current selection after indent."
msgstr ""

#: src/edit/commands.py:2176
msgid ""
"Indent selected number of lines from cursor position.  Set lines to None\n"
"    to indent all the lines in current selection.  Set levels to indent "
"more\n"
"    than one level at a time."
msgstr ""

#: src/edit/commands.py:2184
msgid ""
"Outdent selected number of lines from cursor position.  Set lines to None\n"
"    to indent all the lines in current selection.  Set levels to outdent "
"more\n"
"    than one level at a time."
msgstr ""

#: src/edit/commands.py:2192
msgid "Indent lines spanned by next cursor move"
msgstr ""

#: src/edit/commands.py:2198
msgid "Outdent lines spanned by next cursor move"
msgstr ""

#: src/edit/commands.py:2204
msgid ""
"Indent lines spanned by next cursor move to match, based on the preceding "
"line"
msgstr ""

#: src/edit/commands.py:2210
msgid ""
"Comment out the selected region. The style of commenting can be\n"
"    controlled with the style argument: 'indented' uses the default comment\n"
"    style indented at end of leading white space and 'block' uses a block\n"
"    comment in column zero.  Append '-pep8' to the style to conform to PEP "
"8\n"
"    comment format rules.  If not given, the style configured with the "
"Editor\n"
"    / Block Comment Style preference is used.  Each call adds a level of\n"
"    commenting."
msgstr ""

#: src/edit/commands.py:2231
msgid ""
"Uncomment out the selected region if commented out.  If one_level is \n"
"    True then each call removes only one level of commenting."
msgstr ""

#: src/edit/commands.py:2241
msgid ""
"Toggle commenting out of the selected lines. The style of commenting\n"
"    can be controlled with the style argument: 'indented' uses the default\n"
"    comment style indented at end of leading white space and 'block' uses a\n"
"    block comment in column zero.  Append '-pep8' to the style to conform\n"
"    to PEP 8 comment format rules.  If not given, the style configured with "
"the\n"
"    Editor / Block Comment Style preference is used."
msgstr ""

#: src/edit/commands.py:2261
msgid ""
"Comment out the selected lines. This command is not available if they\n"
"    lines are already commented out. The style of commenting can be "
"controlled\n"
"    with the style argument: 'indented' uses the default comment style\n"
"    indented at end of leading white space and 'block' uses a block comment "
"in\n"
"    column zero. Append '-pep8' to the style to conform to PEP 8 block "
"comment\n"
"    format rules.  If not given, the style configured with the Editor / "
"Block\n"
"    Comment Style preference is used."
msgstr ""

#: src/edit/commands.py:2276
msgid ""
"Remove commenting from the selected lines, if any.  This command is\n"
"    not available if the lines are not commented out."
msgstr ""

#: src/edit/commands.py:2286
msgid "Run or debug the contents of the editor within the Python Shell"
msgstr ""

#: src/edit/commands.py:2306
msgid "Run the contents of the editor within the IPython Shell"
msgstr ""

#: src/edit/commands.py:2318
msgid ""
"Evaluate the current selection from the editor within the Python Shell\n"
"    tool, optionally restarting the shell first. When whole_lines is set, "
"the\n"
"    selection is rounded to whole lines before evaluation. When unspecified\n"
"    (set to None), the setting from the Shell's Option menu is used\n"
"    instead."
msgstr ""

#: src/edit/commands.py:2347
msgid ""
"Evaluate the current selection from the editor within the Debug Probe\n"
"    tool. When whole_lines is set, the selection is rounded to whole lines\n"
"    before evaluation. When unspecified (set to None), the setting from the\n"
"    Shell's Option menu is used instead."
msgstr ""

#: src/edit/commands.py:2368
msgid ""
" Attempt to auto-justify the paragraph around the current start of\n"
"    selection "
msgstr ""

#: src/edit/commands.py:2376
msgid ""
"Reformat the current file to comply with PEP 8 formatting conventions. "
"Indentation\n"
"    is left unchanged unless indentation=True or indentation=None and the "
"Editor > PEP 8 >\n"
"    Reindent All Lines preference is enabled. Indentation within logical "
"lines is always\n"
"    updated. The command will time out after the given number of seconds, or "
"if timeout is\n"
"    None the timeout configured with the Editor > PEP 8 > Reformat timeout "
"preference."
msgstr ""

#: src/edit/commands.py:2384
msgid ""
"Reformat the current selection, or current line if there is no selection, to "
"comply\n"
"    with PEP 8 formatting conventions.  Reformats the given range if start "
"and end are given."
msgstr ""

#: src/edit/commands.py:2389
msgid ""
"Allow user to visit point of definition of a source symbol in the \n"
"    current editor context by typing a fragment of the name"
msgstr ""

#: src/edit/commands.py:2400
msgid "_Goto Definition"
msgstr "_Ir a la definición"

#: src/edit/commands.py:2401
msgid "_Cancel"
msgstr "_Cancelar"

#: src/edit/commands.py:2403
msgid "Find Symbol"
msgstr ""

#: src/edit/commands.py:2425
msgid ""
"Allow user to visit point of definition of a source symbol in the \n"
"      any file in the project by typing a fragment of the name"
msgstr ""

#: src/edit/commands.py:2431
msgid ""
"Join together all lines in given selection (replace newlines with\n"
"    the given delimiter (single space by default)"
msgstr ""

#: src/edit/commands.py:2437
msgid ""
"Join together specified number of lines after current line (replace\n"
"    newlines with the given delimiter (single space by default)"
msgstr ""

#: src/edit/commands.py:2443
msgid ""
"Toggle the global auto-editing switch.  When enabled, the editor\n"
"    performs the auto-edits that have been selected in the Editor >\n"
"    Auto-Editing preferences group."
msgstr ""

#: src/edit/commands.py:2454
msgid " Display the indentation manager for this editor file "
msgstr ""

#: src/edit/commands.py:2460
msgid " Convert all lines with leading spaces to mixed tabs and spaces. "
msgstr ""

#: src/edit/commands.py:2469
msgid " Convert all lines containing leading tabs to spaces only. "
msgstr ""

#: src/edit/commands.py:2478
msgid " Convert all indentation to use tab characters only and no spaces "
msgstr ""

#: src/edit/commands.py:2487
msgid ""
" Force the indent style of the editor to mixed use of tabs and spaces, \n"
"    regardless of the file contents "
msgstr ""

#: src/edit/commands.py:2496
msgid ""
" Force the indent style of the editor to use spaces only, regardless of file "
"contents "
msgstr ""

#: src/edit/commands.py:2504
msgid ""
" Force the indent style of the editor to use tabs only, regardless of file "
"contents "
msgstr ""

#: src/edit/commands.py:2512
msgid ""
" Force the indent style of the editor to match the indent style found in the "
"majority\n"
"    of the file "
msgstr ""

#: src/edit/commands.py:2521
msgid ""
" Check whether indents consistently use spaces or tabs throughout the file. "
msgstr ""

#: src/edit/commands.py:2532
msgid " Toggle the current fold point "
msgstr ""

#: src/edit/commands.py:2540
msgid " Collapse the current fold point "
msgstr ""

#: src/edit/commands.py:2548
msgid " Expand the current fold point "
msgstr ""

#: src/edit/commands.py:2556
msgid " Toggle the clicked fold point "
msgstr ""

#: src/edit/commands.py:2566
msgid " Collapse the current fold point one more level "
msgstr ""

#: src/edit/commands.py:2574
msgid " Collapse the clicked fold point one more level "
msgstr ""

#: src/edit/commands.py:2584
msgid " Expand the current fold point one more level "
msgstr ""

#: src/edit/commands.py:2592
msgid " Expand the clicked fold point one more level "
msgstr ""

#: src/edit/commands.py:2603
msgid " Collapse the current fold point completely "
msgstr ""

#: src/edit/commands.py:2611
msgid " Collapse the clicked fold point completely "
msgstr ""

#: src/edit/commands.py:2621
msgid " Expand the current fold point completely "
msgstr ""

#: src/edit/commands.py:2629
msgid " Expand the clicked fold point completely "
msgstr ""

#: src/edit/commands.py:2639
msgid " Collapse all fold points in the current file "
msgstr ""

#: src/edit/commands.py:2647
msgid " Expand all fold points in the current file "
msgstr ""

#: src/edit/commands.py:2658
msgid "Print active editor document"
msgstr ""

#: src/edit/commands.py:2665
msgid " Show printing page setup dialog "
msgstr ""

#: src/edit/commands.py:2676
msgid " Force syntax highlighting for Python source"
msgstr ""

#: src/edit/commands.py:2679
msgid " Force syntax highlighting for Cython source"
msgstr ""

#: src/edit/commands.py:2682
msgid " Force syntax highlighting for C/C++ source"
msgstr ""

#: src/edit/commands.py:2685
msgid " Force syntax highlighting for Java source "
msgstr ""

#: src/edit/commands.py:2688
msgid " Force syntax highlighting for make files "
msgstr ""

#: src/edit/commands.py:2691
msgid " Force syntax highlighting for DOS batch files "
msgstr ""

#: src/edit/commands.py:2694
msgid " Force syntax highlighting for Visual Basic "
msgstr ""

#: src/edit/commands.py:2697
msgid " Force syntax highlighting for HTML"
msgstr ""

#: src/edit/commands.py:2700
msgid " Force syntax highlighting for properties files "
msgstr ""

#: src/edit/commands.py:2703
msgid " Force syntax highlighting for error list format "
msgstr ""

#: src/edit/commands.py:2706
msgid " Force syntax highlighting for MS IDL"
msgstr ""

#: src/edit/commands.py:2709
msgid " Force syntax highlighting for SQL "
msgstr ""

#: src/edit/commands.py:2712
msgid " Force syntax highlighting for XML files "
msgstr ""

#: src/edit/commands.py:2715
msgid " Force syntax highlighting for XCode files "
msgstr ""

#: src/edit/commands.py:2718
msgid " Force syntax highlighting for LaTeX "
msgstr ""

#: src/edit/commands.py:2721
msgid " Force syntax highlighting for Lua "
msgstr ""

#: src/edit/commands.py:2724
msgid " Force syntax highlighting for XP IDL "
msgstr ""

#: src/edit/commands.py:2727
msgid " Force syntax highlighting for Javascript "
msgstr ""

#: src/edit/commands.py:2730
msgid " Force syntax highlighting for RC file format "
msgstr ""

#: src/edit/commands.py:2733
msgid " Force syntax highlighting for PL/SQL files"
msgstr ""

#: src/edit/commands.py:2736
msgid " Force syntax highlighting for PHP source "
msgstr ""

#: src/edit/commands.py:2739
msgid " Force syntax highlighting for Perl source "
msgstr ""

#: src/edit/commands.py:2742
msgid " Force syntax highlighting for diff/cdiff files "
msgstr ""

#: src/edit/commands.py:2745
msgid " Force syntax highlighting for Pascal source "
msgstr ""

#: src/edit/commands.py:2748
msgid " Force syntax highlighting for Apache configuration file format "
msgstr ""

#: src/edit/commands.py:2751
msgid " Force syntax highlighting for Avenue GIS language "
msgstr ""

#: src/edit/commands.py:2754
msgid " Force syntax highlighting Ada source "
msgstr ""

#: src/edit/commands.py:2757
msgid " Force syntax highlighting for Eiffel source "
msgstr ""

#: src/edit/commands.py:2760
msgid " Force syntax highlighting for Lisp source "
msgstr ""

#: src/edit/commands.py:2763
msgid " Force syntax highlighting for Ruby source "
msgstr ""

#: src/edit/commands.py:2766
msgid " Force syntax highlighting for bash scripts "
msgstr ""

#: src/edit/commands.py:2769
msgid " Force syntax highlighting for Bullant "
msgstr ""

#: src/edit/commands.py:2772
msgid " Force syntax highlighting for TCL "
msgstr ""

#: src/edit/commands.py:2775
msgid " Force syntax highlighting for CSS2 "
msgstr ""

#: src/edit/commands.py:2778
msgid " Force syntax highlighting for QSS (Qt Style sheets) "
msgstr ""

#: src/edit/commands.py:2781
msgid " Force syntax highlighting for SCSS formatted SASS"
msgstr ""

#: src/edit/commands.py:2784
msgid " Force syntax highlighting for Less CSS extension language"
msgstr ""

#: src/edit/commands.py:2787
msgid " Force syntax highlighting for HSS CSS extension language"
msgstr ""

#: src/edit/commands.py:2790
msgid " Force syntax highlighting for Fortran "
msgstr ""

#: src/edit/commands.py:2793
msgid " Force syntax highlighting for Matlab "
msgstr ""

#: src/edit/commands.py:2796
msgid " Force syntax highlighting for Scriptol "
msgstr ""

#: src/edit/commands.py:2799
msgid ""
" Force syntax highlighting for POV ray tracer scene description language "
msgstr ""

#: src/edit/commands.py:2802
msgid " Force syntax highlighting for EScript "
msgstr ""

#: src/edit/commands.py:2805
msgid " Force syntax highlighting for LOUT typesetting language "
msgstr ""

#: src/edit/commands.py:2808
msgid " Force syntax highlighting for MMIX assembly language "
msgstr ""

#: src/edit/commands.py:2811
msgid " Force syntax highlighting for NSIS "
msgstr ""

#: src/edit/commands.py:2814
msgid " Force syntax highlighting for Postscript "
msgstr ""

#: src/edit/commands.py:2817
msgid " Force syntax highlighting for YAML "
msgstr ""

#: src/edit/commands.py:2820
msgid " Force syntax highlighting for VXML "
msgstr ""

#: src/edit/commands.py:2823
msgid " Force syntax highlighting for Masm assembly language "
msgstr ""

#: src/edit/commands.py:2826
msgid " Force syntax highlighting for Baan "
msgstr ""

#: src/edit/commands.py:2829
msgid " Force syntax highlighting for NNCrontab files "
msgstr ""

#: src/edit/commands.py:2832
msgid " Force syntax highlighting for Mako template file "
msgstr ""

#: src/edit/commands.py:2835
msgid " Force syntax highlighting for Django template file "
msgstr ""

#: src/edit/commands.py:2838
msgid " Force syntax highlighting for R source file "
msgstr ""

#: src/edit/commands.py:2841
msgid " Force syntax highlighting for Coffee Script source file "
msgstr ""

#: src/edit/commands.py:2844
msgid " Force syntax highlighting for CMake file "
msgstr ""

#: src/edit/commands.py:2848
msgid " Use no syntax highlighting "
msgstr ""

#: src/edit/commands.py:2851
msgid " Use syntax highlighting appropriate to the file type "
msgstr ""

#: src/edit/commands.py:2857
msgid " Toggles line wrapping preference for all editors "
msgstr ""

#: src/edit/commands.py:2863
msgid " Set anchor in the visit history to go back to "
msgstr ""

#: src/edit/commands.py:2870
msgid "Commands available when working either in the shell or editor"
msgstr ""

#: src/edit/commands.py:2877 src/edit/commands.py:2955
msgid "Constructor"
msgstr ""

#: src/edit/commands.py:2886
msgid ""
" Goto the definition of the source symbol that was last clicked on,\n"
"    optionally showing the definition in another split if one is available\n"
"    and other_split is True."
msgstr ""

#: src/edit/commands.py:2903
msgid ""
" Goto the definition of the selected source symbol, optionally showing the\n"
"    definition in another split if one is available and other_split is True."
msgstr ""

#: src/edit/commands.py:2919
msgid "Get shell with focus or otherwise active editor"
msgstr ""

#: src/edit/commands.py:2948
msgid "Commands for source assistant "
msgstr ""

#: src/edit/commands.py:2988
msgid ""
" Show the steps used to determine likely types in the source\n"
"      assistant "
msgstr ""

#: src/edit/commands.py:2999
msgid ""
" Hide the steps used to determine likely types in the source\n"
"      assistant "
msgstr ""

#~ msgid "Go To line"
#~ msgstr "Ir a la línea:"
